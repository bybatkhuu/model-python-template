digraph G {
concentrate=true;
splines="ortho";
rankdir="LR";
subgraph legend{
    rank = min;
    label = "legend";
    Legend [shape=none, margin=0, label = <
        <table cellspacing="0" cellpadding="0" border="1"><tr><td>Code2flow Legend</td></tr><tr><td>
        <table cellspacing="0">
        <tr><td>Regular function</td><td width="50px" bgcolor='#cccccc'></td></tr>
        <tr><td>Trunk function (nothing calls this)</td><td bgcolor='#966F33'></td></tr>
        <tr><td>Leaf function (this calls nothing else)</td><td bgcolor='#6db33f'></td></tr>
        <tr><td>Function call</td><td><font color='black'>&#8594;</font></td></tr>
        </table></td></tr></table>
        >];
}node_4c48eeae [label="57: __init__()" name="_base::SimpleModel.__init__" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_a643ce86 [label="343: __repr__()" name="_base::SimpleModel.__repr__" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_bbfff2aa [label="338: __str__()" name="_base::SimpleModel.__str__" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_136196fd [label="95: is_model_files_exist()" name="_base::SimpleModel.is_model_files_exist" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_b21b7ca3 [label="187: is_similar()" name="_base::SimpleModel.is_similar" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_57ea54ee [label="211: is_trained()" name="_base::SimpleModel.is_trained" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_41f55827 [label="255: load()" name="_base::SimpleModel.load" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_8883f426 [label="152: predict()" name="_base::SimpleModel.predict" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_1ab8140c [label="121: run()" name="_base::SimpleModel.run" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_e2279113 [label="223: save()" name="_base::SimpleModel.save" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_611349ab [label="169: score()" name="_base::SimpleModel.score" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_8379b8c2 [label="139: train()" name="_base::SimpleModel.train" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_18ac5e6d [label="61: clean_obj_dict()" name="_utils::clean_obj_dict" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_07e2bfd3 [label="21: create_dir()" name="_utils::create_dir" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_9c65894c [label="93: obj_to_repr()" name="_utils::obj_to_repr" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_4c48eeae -> node_136196fd [color="#D55E00" penwidth="2"];
node_4c48eeae -> node_41f55827 [color="#D55E00" penwidth="2"];
node_a643ce86 -> node_9c65894c [color="#D55E00" penwidth="2"];
node_bbfff2aa -> node_18ac5e6d [color="#56B4E9" penwidth="2"];
node_b21b7ca3 -> node_8883f426 [color="#009E73" penwidth="2"];
node_b21b7ca3 -> node_611349ab [color="#009E73" penwidth="2"];
node_41f55827 -> node_136196fd [color="#CC79A7" penwidth="2"];
node_8883f426 -> node_8883f426 [color="#D55E00" penwidth="2"];
node_1ab8140c -> node_57ea54ee [color="#F0E442" penwidth="2"];
node_1ab8140c -> node_8883f426 [color="#F0E442" penwidth="2"];
node_1ab8140c -> node_8379b8c2 [color="#F0E442" penwidth="2"];
node_e2279113 -> node_57ea54ee [color="#009E73" penwidth="2"];
node_e2279113 -> node_07e2bfd3 [color="#009E73" penwidth="2"];
subgraph cluster_82217841 {
    label="File: _base";
    name="_base";
    style="filled";
    graph[style=dotted];
    subgraph cluster_9e6360c0 {
        node_4c48eeae node_136196fd node_1ab8140c node_8379b8c2 node_8883f426 node_611349ab node_b21b7ca3 node_57ea54ee node_e2279113 node_41f55827 node_bbfff2aa node_a643ce86;
        label="Class: SimpleModel";
        name="SimpleModel";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_05a0bfdc {
    node_07e2bfd3 node_18ac5e6d node_9c65894c;
    label="File: _utils";
    name="_utils";
    style="filled";
    graph[style=dotted];
};
}
